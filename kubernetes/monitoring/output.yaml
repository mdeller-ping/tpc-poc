apiVersion: v1
data:
  SERVER_PROFILE_MONITOR_PATH: monitoring/pingfederate/jolokia-simple
  SERVER_PROFILE_MONITOR_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
  SERVER_PROFILE_PARENT: MONITOR
kind: ConfigMap
metadata:
  name: jolokia-environment-variables
---
apiVersion: v1
data:
  OPERATIONAL_MODE: CLUSTERED_ENGINE
  PF_DNS_PING_CLUSTER: _bind-port._tcp.pf-cluster-dns
  PF_DNS_PING_NAMESPACE: ${PING_IDENTITY_K8S_NAMESPACE}
  PF_DNS_PING_RECORDTYPE: SRV
  SERVER_PROFILE_PATH: server-profiles/pingfederate
  SERVER_PROFILE_URL: https://github.com/mdeller-ping/tpc-poc.git
kind: ConfigMap
metadata:
  name: pingfederate-engine-environment-variables
---
apiVersion: v1
data:
  OPERATIONAL_MODE: CLUSTERED_CONSOLE
  PF_DNS_PING_CLUSTER: _bind-port._tcp.pf-cluster-dns
  PF_DNS_PING_NAMESPACE: ${PING_IDENTITY_K8S_NAMESPACE}
  PF_DNS_PING_RECORDTYPE: SRV
  SERVER_PROFILE_PATH: server-profiles/pingfederate
  SERVER_PROFILE_URL: https://github.com/mdeller-ping/tpc-poc.git
kind: ConfigMap
metadata:
  name: pingfederate-environment-variables
---
apiVersion: v1
data:
  DATABASE: pingfed-tpc
  ENV: tpc
  MONITOR_HOST: http://influxdb.tick.svc.cluster.local:8086
  MONITOR_PASSWORD: root
  MONITOR_USERNAME: root
kind: ConfigMap
metadata:
  name: telegraf-environment-variables
---
apiVersion: v1
data:
  telegraf.conf: |
    [global_tags]
      env = "$ENV"
    [agent]
      interval = "1s"
      round_interval = true
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_interval = "10s"
      debug = true
      flush_jitter = "0s"
      precision = ""
      hostname = ""
      omit_hostname = false
    [[inputs.cpu]]
      ## Whether to report per-cpu stats or not
      percpu = true
      ## Whether to report total system cpu stats or not
      totalcpu = true
      ## If true, collect raw CPU time metrics.
      collect_cpu_time = false
      ## If true, compute and report the sum of all non-idle CPU states.
      report_active = false
    [[inputs.mem]]
    [[inputs.jolokia2_agent]]
      urls = ["https://localhost:9031/jolokia"]
      insecure_skip_verify = true
      tagexclude = ["jolokia_agent_url"]
    [[inputs.jolokia2_agent.metric]]
        name  = "java_runtime"
        mbean = "java.lang:type=Runtime"
        paths = ["Uptime"]
    [[inputs.jolokia2_agent.metric]]
        name  = "java_memory"
        mbean = "java.lang:type=Memory"
        paths = ["HeapMemoryUsage", "NonHeapMemoryUsage", "ObjectPendingFinalizationCount"]
    [[inputs.jolokia2_agent.metric]]
        name     = "java_garbage_collector"
        mbean    = "java.lang:name=*,type=GarbageCollector"
        paths    = ["CollectionTime", "CollectionCount"]
        tag_keys = ["name"]
    [[inputs.jolokia2_agent.metric]]
        name  = "java_last_garbage_collection"
        mbean = "java.lang:name=*,type=GarbageCollector"
        paths = ["LastGcInfo"]
        tag_keys = ["name"]
    [[inputs.jolokia2_agent.metric]]
        name  = "java_threading"
        mbean = "java.lang:type=Threading"
        paths = ["TotalStartedThreadCount", "ThreadCount", "CurrentThreadCpuTime", "DaemonThreadCount", "PeakThreadCount"]
    [[inputs.jolokia2_agent.metric]]
        name  = "java_class_loading"
        mbean = "java.lang:type=ClassLoading"
        paths = ["LoadedClassCount", "UnloadedClassCount", "TotalLoadedClassCount"]
    [[inputs.jolokia2_agent.metric]]
        name     = "java_memory_pool"
        mbean    = "java.lang:name=*,type=MemoryPool"
        paths    = ["Usage", "PeakUsage", "CollectionUsage"]
        tag_keys = ["name"]
    [[inputs.jolokia2_agent.metric]]
        name    = "pingfederate"
        mbean   = "pingfederate:type=*"
        paths   = ["Count"]
    [[inputs.jolokia2_agent.metric]]
        name     = "jetty_connector_stats"
        mbean    = "org.eclipse.jetty.server:context=*,id=*,type=connectorstatistics"
        paths    = ["bytesIn","bytesOut","connections","connectionsOpen","connectionsOpenMax","connectionDurationMean","connectionDurationMax","connectionDurationStdDev","messagesOutPerConnectionMax","messagesOutPerConnectionMean","messagesOutPerConnectionStdDev","messagesOutPerSecond","messagesInPerConnectionMax","messagesInPerConnectionMean","messagesInPerConnectionStdDev","messagesInPerSecond"]
    [[inputs.jolokia2_agent.metric]]
        name     = "jetty_connector_resources"
        mbean    = "com.pingidentity.appserver.jetty.server.connector:context=*,id=*,type=serverconnector"
        paths    = ["acceptQueueSize","acceptors"]
    [[outputs.influxdb]]
      urls = ["$MONITOR_HOST"]
      database = "$DATABASE"
      write_consistency = "any"
      timeout = "5s"
      username = "$MONITOR_USERNAME"
      password = "$MONITOR_PASSWORD"
kind: ConfigMap
metadata:
  name: telegraf-pingfederate-config
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    run: pf-cluster
  name: pf-cluster-dns
spec:
  clusterIP: None
  ports:
  - name: bind-port
    port: 7600
    protocol: TCP
    targetPort: 7600
  publishNotReadyAddresses: true
  selector:
    app: pf-cluster
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pf-cluster
    tier: console
  name: pf-console-lb
spec:
  ports:
  - port: 9999
    protocol: TCP
    targetPort: 9999
  selector:
    app: pf-cluster
    tier: console
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pf-cluster
    tier: engine
  name: pf-engine-lb
spec:
  ports:
  - port: 9031
    protocol: TCP
    targetPort: 9031
  selector:
    app: pf-cluster
    tier: engine
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  labels:
    app: pf-cluster
    tier: console
  name: pf-cluster-console
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pf-cluster
      tier: console
  template:
    metadata:
      labels:
        app: pf-cluster
        tier: console
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingfederate-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: gcr.io/ping-identity/pingfederate:10.0.0-Beta-centos-edge
        name: console-node
        ports:
        - containerPort: 9999
        resources:
          limits:
            cpu: "1"
            memory: 1.5Gi
          requests:
            cpu: "1"
            memory: 1.5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: null
  labels:
    app: pf-cluster
    tier: engine
  name: pf-cluster-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pf-cluster
      tier: engine
  template:
    metadata:
      labels:
        app: pf-cluster
        tier: engine
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingfederate-engine-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        - configMapRef:
            name: jolokia-environment-variables
        image: gcr.io/ping-identity/pingfederate:10.0.0-Beta-centos-edge
        name: engine-node
        ports:
        - containerPort: 9031
        resources:
          limits:
            cpu: "1"
            memory: 1.5Gi
          requests:
            cpu: "1"
            memory: 1.5Gi
      - env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom:
        - configMapRef:
            name: telegraf-environment-variables
        image: docker.io/library/telegraf:1.9.5-alpine
        name: telegraf
        resources:
          limits:
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /etc/telegraf
          name: telegraf-pingfederate-config
      volumes:
      - configMap:
          name: telegraf-pingfederate-config
        name: telegraf-pingfederate-config
